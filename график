import pandas as pd
from jupyter_dash import JupyterDash
from dash import dcc, html
from dash.dependencies import Input, Output
import plotly.express as px

# Пример загрузки данных (или замени своим путем)
# df = pd.read_csv("your_data.csv")

# Демоданные (пример структуры)
data = {
    'id': range(1, 13),
    'client_id': [101]*6 + [202]*6,
    'month': [202301, 202302, 202303, 202304, 202305, 202306,
              202301, 202302, 202303, 202304, 202305, 202306],
    'feature_1': [10, 12, 13, 15, 16, 18, 5, 7, 8, 6, 4, 3],
    'feature_2': [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0]
}
df = pd.DataFrame(data)

# Преобразуем дату
df["month"] = pd.to_datetime(df["month"].astype(str), format="%Y%m")

# Список параметров
technical_cols = ['id', 'client_id', 'month']
feature_cols = [col for col in df.columns if col not in technical_cols]

# Инициализация Dash в Jupyter
app = JupyterDash(__name__)

# Layout
app.layout = html.Div([
    html.H2("Динамика параметров клиента до ухода"),

    dcc.Dropdown(
        id='client-selector',
        options=[{'label': str(cid), 'value': cid} for cid in df['client_id'].unique()],
        placeholder='Выберите клиента'
    ),

    dcc.Checklist(
        id='feature-selector',
        options=[{'label': col, 'value': col} for col in feature_cols],
        value=feature_cols[:1],  # По умолчанию первый параметр
        labelStyle={'display': 'inline-block'}
    ),

    dcc.Graph(id='timeseries-graph')
])

# Callback
@app.callback(
    Output('timeseries-graph', 'figure'),
    [Input('client-selector', 'value'),
     Input('feature-selector', 'value')]
)
def update_graph(selected_client, selected_features):
    if not selected_client or not selected_features:
        return {}

    client_data = df[df['client_id'] == selected_client].sort_values('month')
    last_month = client_data['month'].max()
    client_data = client_data[client_data['month'] < last_month]

    fig = px.line(
        client_data,
        x='month',
        y=selected_features,
        markers=True,
        title=f"Клиент {selected_client}: изменение параметров до ухода"
    )
    fig.update_layout(legend_title_text='Параметры')
    return fig

# Запуск внутри Jupyter
app.run_server(mode='inline')

